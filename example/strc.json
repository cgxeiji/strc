[
    {
        "id": 0,
        "string": "hello ",
        "cpp": "template</*\n    hello \n*/>\ncgx::strc_id_t cgx::get_strc_id<cgx::strc<char, 104, 101, 108, 108, 111, 32>>() { return 0; }",
        "variable_types": []
    },
    {
        "id": 1,
        "string": "world",
        "cpp": "template</*\n    world\n*/>\ncgx::strc_id_t cgx::get_strc_id<cgx::strc<char, 119, 111, 114, 108, 100>>() { return 1; }",
        "variable_types": []
    },
    {
        "id": 2,
        "string": "hello world",
        "cpp": "template</*\n    hello world\n*/>\ncgx::strc_id_t cgx::get_strc_id<cgx::strc<char, 104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100>>() { return 2; }",
        "variable_types": []
    },
    {
        "id": 3,
        "string": "\u65e5\u672c\u8a9e\u3067\u3082\u51fa\u6765\u307e\u3059\uff01",
        "cpp": "template</*\n    \u65e5\u672c\u8a9e\u3067\u3082\u51fa\u6765\u307e\u3059\uff01\n*/>\ncgx::strc_id_t cgx::get_strc_id<cgx::strc<char, 230, 151, 165, 230, 156, 172, 232, 170, 158, 227, 129, 167, 227, 130, 130, 229, 135, 186, 230, 157, 165, 227, 129, 190, 227, 129, 153, 239, 188, 129>>() { return 3; }",
        "variable_types": []
    },
    {
        "id": 4,
        "string": "h",
        "cpp": "template</*\n    h\n*/>\ncgx::strc_id_t cgx::get_strc_id<cgx::strc<char, 104>>() { return 4; }",
        "variable_types": []
    },
    {
        "id": 5,
        "string": "e",
        "cpp": "template</*\n    e\n*/>\ncgx::strc_id_t cgx::get_strc_id<cgx::strc<char, 101>>() { return 5; }",
        "variable_types": []
    },
    {
        "id": 6,
        "string": "/main.cpp",
        "cpp": "template</*\n    /main.cpp\n*/>\ncgx::strc_id_t cgx::get_strc_id<cgx::strc<char, 47, 109, 97, 105, 110, 46, 99, 112, 112>>() { return 6; }",
        "variable_types": []
    },
    {
        "id": 7,
        "string": "int: %d, char: %d, float: %f, double: %f, short: %d, long: %d",
        "cpp": "template</*\n    int: %d, char: %d, float: %f, double: %f, short: %d, long: %d\n*/>\ncgx::strc_id_t cgx::get_strc_id<cgx::strc<char, 105, 110, 116, 58, 32, 37, 100, 44, 32, 99, 104, 97, 114, 58, 32, 37, 100, 44, 32, 102, 108, 111, 97, 116, 58, 32, 37, 102, 44, 32, 100, 111, 117, 98, 108, 101, 58, 32, 37, 102, 44, 32, 115, 104, 111, 114, 116, 58, 32, 37, 100, 44, 32, 108, 111, 110, 103, 58, 32, 37, 100>>() { return 7; }\n\ntemplate</*\n    int: %d, char: %d, float: %f, double: %f, short: %d, long: %d\n*/>\ncgx::strc_id_t cgx::get_fmt_strc_id<cgx::strc<char, 105, 110, 116, 58, 32, 37, 100, 44, 32, 99, 104, 97, 114, 58, 32, 37, 100, 44, 32, 102, 108, 111, 97, 116, 58, 32, 37, 102, 44, 32, 100, 111, 117, 98, 108, 101, 58, 32, 37, 102, 44, 32, 115, 104, 111, 114, 116, 58, 32, 37, 100, 44, 32, 108, 111, 110, 103, 58, 32, 37, 100>, int, char, float, double, unsigned short, int>() { return 7; }",
        "variable_types": [
            {
                "type": "int",
                "size": 4
            },
            {
                "type": "char",
                "size": 1
            },
            {
                "type": "float",
                "size": 4
            },
            {
                "type": "double",
                "size": 8
            },
            {
                "type": "unsigned short",
                "size": 2
            },
            {
                "type": "int",
                "size": 4
            }
        ]
    },
    {
        "id": 8,
        "string": "Enumerator: %d",
        "cpp": "template</*\n    Enumerator: %d\n*/>\ncgx::strc_id_t cgx::get_strc_id<cgx::strc<char, 69, 110, 117, 109, 101, 114, 97, 116, 111, 114, 58, 32, 37, 100>>() { return 8; }\n\ntemplate</*\n    Enumerator: %d\n*/>\ncgx::strc_id_t cgx::get_fmt_strc_id<cgx::strc<char, 69, 110, 117, 109, 101, 114, 97, 116, 111, 114, 58, 32, 37, 100>, unsigned int>() { return 8; }",
        "variable_types": [
            {
                "type": "unsigned int",
                "size": 4
            }
        ]
    },
    {
        "id": 9,
        "string": "Enumerator::ItCanBeVerbose",
        "cpp": "template</*\n    Enumerator::ItCanBeVerbose\n*/>\ncgx::strc_id_t cgx::get_strc_id<cgx::strc<char, 69, 110, 117, 109, 101, 114, 97, 116, 111, 114, 58, 58, 73, 116, 67, 97, 110, 66, 101, 86, 101, 114, 98, 111, 115, 101>>() { return 9; }",
        "variable_types": []
    }
]